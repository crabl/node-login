- user = typeof(udata) != 'undefined' ? udata : { }
- participants = typeof(pdata) != 'undefined' ? pdata : { }
input(type='hidden', value= user._id)#userId
input(type='hidden', value=participants)#plistCache
style(type='text/css')
  #account-form-container { 
    width: 627px !important; 
    margin: 100px auto;
  }

  table { font-size: 10pt; }
  table tbody { font-weight: normal; }
  
  #addButton { margin-left: 200px; }

script(type='text/javascript')
  var current_participants = JSON.parse($("#plistCache").val());

  function retabulate() {
    $("#ptable tbody").html(""); // clear existing table contents

    // renumber everything
    for(var pid = 0; pid < current_participants.length; pid++) {
      var person = current_participants[pid];
      $("#ptable > tbody").append("<tr><td>"+person.firstname+"</td><td>"+person.lastname+"</td><td>"+person.dob+"</td><td>"+person.role+"</td><td>"+person.gender+"</td><td><input type='button' onclick='deleteParticipant("+pid+")' class='btn btn-small btn-danger' value='Delete' /></td></tr>");
    }
  }

  function saveFormData() {
    var pArray = JSON.stringify(current_participants);
    
    $.ajax({
            url: "/participants",
            type: "POST",
            data: {participants : pArray},
            error: function(jqXHR){
                console.log(jqXHR.responseText+' :: '+jqXHR.statusText);
            }
        });
  }

  function validAge(d) {
    if(d == '') {
      return false;
    }

    var limitdate = new Date("06/06/2010");
    var birthdate = new Date(d);
      
    if(birthdate < limitdate) {
      return true;
    }
      
    return false;
  }
  
  function addNewParticipant() {
    var firstname = $("#firstname-tf");
    var lastname = $("#lastname-tf");
    var dob = $("#dp0");
    var gender = $("#gender-sf");
    var role = $("#attr-sf");
    
    var person = {
      firstname: firstname.val(),
      lastname: lastname.val(),
      dob: dob.val(),
      gender: gender.val(),
      role: role.val()
    }
    
    // Validate whether they are actually a person
    if(firstname.val() != '' && lastname.val() != '' && validAge(dob.val()) && gender.val() != 'Gender' && role.val() != '') {
      var pid = current_participants.length;
      current_participants.push(person);
      
      // hide alerts
      $("#alert-dob").hide();
      $("#alert").hide();
      
      // Reset form fields
      firstname.val("");
      lastname.val("");
      dob.val("");
      gender.val("Gender");
      role.val("");
      
      retabulate();        
      saveFormData(); // post request to save participants
    } else if(!validAge(dob.val())) {
      $("#alert-dob").show();
    } else {
      $("#alert").show();
    }
    
    console.log(current_participants);
  }

  function deleteParticipant(index) {
    if(index < 0 || index >= current_participants.length) {
      console.log("error");
    } else {
      current_participants.splice(index, 1);
      retabulate();
      saveFormData(); // post request to participants update
    }
  }

  $(document).ready(function() { retabulate(); });

#account-form-container
  form(method="post")#account-form.form-horizontal.well.span8
   h3 Group Participants
      p#sub1.subheading 
      hr
      fieldset
        #participant
          #alert.alert.alert-error(style='display:none;')
            p Error: Please fill in all form fields!
          #alert-dob.alert.alert-error(style='display:none;')
            p Error: Invalid age entered
          #name-cg.control-group
            label.control-label(for='firstname-tf') Full Name
            .controls
              input#firstname-tf.input-xlarge.span2(type='text', name='firstname', placeholder='First Name')
              input#lastname-tf.input-xlarge.span2(type='text', name='lastname', placeholder='Last Name')
           #dob-cg.control-group
             label.control-label(for='dob-tf') Date of Birth
             .controls
               input#dob-tf.input-xlarge.span2(type='text', name='dob', placeholder='mm/dd/yyyy')
               select#gender-sf.span2
                 option(disabled selected value='Gender') Gender
                 option(value='Female') Female
                 option(value='Male') Male
           #attr-cg.control-group
             label.control-label(for='attr-sf') Role
             .controls
               select#attr-sf.input-xlarge.span2
                 option(selected) Dancer
                 option Group Administrator (max: 2)
                 option Chaperone (max: 2)
         #addbtn
           #add-cg.control-group
             button#addButton.btn.btn-success(type='button', onclick='addNewParticipant()') Add New Participant               
        #current-list
          table#ptable.table.table-bordered
            thead
              tr
                th First Name
                th Last Name
                th Birthdate
                th Role
                th Gender
                th Delete
            tbody
              
        br

// display form errors in a custom modal window //

include modals/form-errors
