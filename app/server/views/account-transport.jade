- user = typeof(udata) != 'undefined' ? udata : { }
- transport = typeof(tdata) != 'undefined' ? tdata : { }
input(type='hidden', value= user._id)#userId

script(type='text/javascript')
  function sf_changed(field) {
    var mode = $("select#"+field+"method-sf").val();
    
    $("#"+field+"-plane").hide();
    $("#"+field+"-bus").hide();

    if(mode == 'by plane') {
      $("#"+field+"-plane").show();
    } else if(mode == 'by bus or car') {
      $("#"+field+"-bus").show();
    }
  }
  
  $(document).ready(function() {
    sf_changed("arrival");
    sf_changed("departure");
  });

#account-form-container
    form( method="post")#account-form.form-horizontal.well.span6h1
      h3 Transportation Information
      p#sub1.subheading 
        strong 
          NOTE: Transportation to and from the Lethbridge Airport (YQL) will be assisted. For more information on shuttle services to/from the Calgary International Airport (YYC), please see the <a href="http://wchff2013.com/performers" target="_blank">performers page on the WCHFF 2013 website</a>
          
      hr
      fieldset
        h5 ARRIVAL INFORMATION
        br
        #arrivalmethod-cg.control-group
          label.control-label(for='arrivalmethod-sf') Arrival 
          .controls
            select#arrivalmethod-sf.input-xlarge(onchange='sf_changed("arrival")')
              methods = ['by plane', 'by bus or car']
              option(selected=transport.arrival.method == '', value='', disabled) Please Select...
              for item in methods
                option(selected=transport.arrival.method == item, value=item) #{item}
        #arrival-plane
          #arrival-plane-numpeople-cg.control-group
            label.control-label(for='arrival-plane-numpeople-tf') Number of people
            .controls
              input#arrival-plane-numpeople-tf.input-xlarge(type='text', name='arrival-plane-numpeople', value=transport.arrival.numpeople)
          #arrival-plane-carrier-cg.control-group
            label.control-label(for='arrival-plane-carrier-tf') Carrier
            .controls
              input#arrival-plane-carrier-tf.input-xlarge(type='text', name='arrival-plane-carrier', value=transport.arrival.carrier)
          #arrival-plane-flight-cg.control-group
            label.control-label(for='arrival-plane-flight-tf') Flight number
            .controls
              input#arrival-plane-flight-tf.input-xlarge(type='text', name='arrival-plane-flight', value=transport.arrival.flight)
        #arrival-bus
        #arrival-plane-time-cg.control-group
          label.control-label(for='arrival-eta-hour-sf') Arrival time
          .controls
            select.span1(name='arrival-eta-hour-sf')
              option(selected=transport.arrival.eta_hour == '', value='', disabled) Hour
              hours = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12']
              for hour in hours
                option(selected=transport.arrival.eta_hour == hour, value=hour) #{hour}
            select.span1(name='arrival-eta-minute-sf')
              option(selected=transport.arrival.eta_minute == '', value='', disabled) Minute
              minutes = ['00', '15', '30', '45']
              for minute in minutes
                option(selected=transport.arrival.eta_minute == minute, value=minute) #{minute}
            select.span1(name='arrival-eta-ampm-sf')
              option(selected=transport.arrival.eta_ampm == '', value='', disabled) AM/PM
              ampms = ['AM', 'PM']
              for ampm in ampms
                option(selected=transport.arrival.eta_ampm == ampm, value=ampm) #{ampm}
          br
          br
          p NOTE: Please ensure that all times are provided in terms of Mountain Daylight Time (GMT-6)

        h5 DEPARTURE INFORMATION
        br
        #departuremethod-cg.control-group
          label.control-label(for='departuremethod-sf') Departure 
          .controls
            select#departuremethod-sf.input-xlarge(onchange='sf_changed("departure")')
              methods = ['by plane', 'by bus or car']
              option(selected=transport.departure.method == '', value='', disabled) Please Select...
              for item in methods
                option(selected=transport.departure.method == item, value=item) #{item}
        #departure-plane
          #departure-plane-numpeople-cg.control-group
            label.control-label(for='departure-plane-numpeople-tf') Number of people
            .controls
              input#departure-plane-numpeople-tf.input-xlarge(type='text', name='departure-plane-numpeople', value=transport.departure.numpeople)
          #departure-plane-carrier-cg.control-group
            label.control-label(for='departure-plane-carrier-tf') Carrier
            .controls
              input#departure-plane-carrier-tf.input-xlarge(type='text', name='departure-plane-carrier', value=transport.departure.carrier)
          #departure-plane-flight-cg.control-group
            label.control-label(for='departure-plane-flight-tf') Flight number
            .controls
              input#departure-plane-flight-tf.input-xlarge(type='text', name='departure-plane-flight', value=transport.departure.flight)
        #departure-bus
        #departure-plane-time-cg.control-group
          label.control-label(for='departure-eta-hour-sf') Departure time
          .controls
            select.span1(name='departure-eta-hour-sf')
              option(selected=transport.departure.eta_hour == '', value='', disabled) Hour
              hours = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12']
              for hour in hours
                option(selected=transport.departure.eta_hour == hour, value=hour) #{hour}
            select.span1(name='departure-eta-minute-sf')
              option(selected=transport.departure.eta_minute == '', value='', disabled) Minute
              minutes = ['00', '15', '30', '45']
              for minute in minutes
                option(selected=transport.departure.eta_minute == minute, value=minute) #{minute}
            select.span1(name='departure-eta-ampm-sf')
              option(selected=transport.departure.eta_ampm == '', value='', disabled) AM/PM
              ampms = ['AM', 'PM']
              for ampm in ampms
                option(selected=transport.departure.eta_ampm == ampm, value=ampm) #{ampm}
          br
          br
          p NOTE: Please ensure that all times are provided in terms of Mountain Daylight Time (GMT-6)
        h4 REMARKS
        p 
          | Please include any additional remarks below regarding your travel plans. For instance, you may indicate if some
          | group members will be arriving via another transportation method, of if some members need to leave earlier than others.
        #remarks-cg.control-group
          label.control-label(for='dance1-description-tf') Additional Remarks
          .controls
            textarea#remarks-tf.input-xlarge(rows=5, name='remarks', value=transport.remarks)= transport.remarks
          
        button(type='submit')#account-form-btn2.btn.btn-success.pull-right

// display form errors in a custom modal window //

include modals/form-errors
